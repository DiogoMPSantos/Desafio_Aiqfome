openapi: 3.0.3
info:
  title: Laravel API - Clientes e Produtos Favoritos
  version: 1.0.0
  description: API para gerenciar clientes e produtos favoritos com autenticação via Sanctum.

servers:
  - url: http://localhost:8000/api
    description: Local development server

components:
  securitySchemes:
    SanctumAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email

    Favorite:
      type: object
      properties:
        product_id:
          type: string
        title:
          type: string
        image:
          type: string
        price:
          type: number
          format: float
        review:
          type: object
      required:
        - product_id

security:
  - SanctumAuth: []

paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: Diogo Santos
                email:
                  type: string
                  format: email
                  example: diogo.santos@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '201':
          description: User created successfully
        '422':
          description: Validation error
  /login:
    post:
      summary: Login user and return token
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: diogo.santos@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
  /logout:
      post:
        summary: Logout authenticated user
        tags:
          - Auth
        security:
          - SanctumAuth: []
        responses:
          '200':
            description: User logged out successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Successfully logged out
          '401':
            description: Unauthorized
  /user:
    get:
      summary: Get authenticated user
      tags:
        - Users
      security:
        - SanctumAuth: []
      responses:
        '200':
          description: Authenticated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Diogo Santos
                  email:
                    type: string
                    format: email
                    example: diogo.santos@example.com
        '401':
          description: Unauthorized
  /clients:
    get:
      summary: List all clients
      tags:
        - Clients
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      summary: Create a new client
      tags:
        - Clients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Client created successfully

  /clients/{clientId}:
    get:
      summary: Get client details
      tags:
        - Clients
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    put:
      summary: Update client
      tags:
        - Clients
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client updated successfully
    delete:
      summary: Delete client
      tags:
        - Clients
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Client deleted successfully

  /clients/{clientId}/favorites:
    get:
      summary: List favorites of a client
      tags:
        - Favorites
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of favorites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favorite'
    post:
      summary: Add a product to client's favorites
      tags:
        - Favorites
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorite'
      responses:
        '201':
          description: Product added to favorites

  /clients/{clientId}/favorites/{productId}:
    delete:
      summary: Remove a product from client's favorites
      tags:
        - Favorites
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
        - in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product removed from favorites
